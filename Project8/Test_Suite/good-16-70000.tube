# register allocation of array pointer and val, constant folding/propagation
# common subexpression elimination, dead code elimination
array(int) x;
x.resize(10);
int val = random(8);
x[0] = val + 1;
x[1] = val + 2;
x[2] = val + 1;
if (x[0] == val + 1 && x[1] == val + 2) x[3] = val + 2;
if (x[0] == val + 1 && x[1] == val + 2) x[4] = val + 1 + val + 1 - val + 1;
x[5] = val + 2;

int i = 0;
while (i < 4) {
  x[5 + 1 + i] = val + i % 2 + 1;
  x[5 + 1 + i] = val + i % 2 + 1;
  x[5 + 1 + i] = val + i % 2 + 1;
  if (1) x[5 + 1 + i] = val + i % 2 + 1;
  if (1) x[5 + 1 + i] = val + i % 2 + 1;
  if (1) x[5 + 1 + i] = val + i % 2 + 1;
  if (0) x[5 + 1 + i] = val + i % 2 + 1;
  if (0) x[5 + 1 + i] = val + i % 2 + 1;
  if (0) x[5 + 1 + i] = val + i % 2 + 1;
  i = i + 1;
}

print x;

