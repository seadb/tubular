# register allocation of array pointer and val, constant folding/propagation
# common subexpression elimination, dead code elimination

declare array(int) doLoop(array(int) a, int v);

array(int) x;
x.resize(10);
int val = random(8);
x[0] = val + 1;
x[1] = val + 2;
x[2] = val + 1;
if (x[0] == val + 1 && x[1] == val + 2) x[3] = val + 2;
if (x[0] == val + 1 && x[1] == val + 2) x[4] = val + 1 + val + 1 - val + 1;
x[5] = val + 2;
x = doLoop(x, val);

print x;


define array(int) doLoop(array(int) a, int v) {
  int i = 0;
  while (i < 4) {
    a[5 + 1 + i] = v + i % 2 + 1;
    a[5 + 1 + i] = v + i % 2 + 1;
    a[5 + 1 + i] = v + i % 2 + 1;
    if (1) a[5 + 1 + i] = v + i % 2 + 1;
    if (1) a[5 + 1 + i] = v + i % 2 + 1;
    if (1) a[5 + 1 + i] = v + i % 2 + 1;
    if (0) a[5 + 1 + i] = v + i % 2 + 1;
    if (0) a[5 + 1 + i] = v + i % 2 + 1;
    if (0) a[5 + 1 + i] = v + i % 2 + 1;
    i = i + 1;
  }

  return a;
}

